  <div className="row">
                <TextField
                  className="col-md-6 me-3"
                  value={rowData.vendor_name}
                  autoFocus
                  margin="dense"
                  id="name"
                  readOnly={true}
                  label="Vendor Name"
                  type="text"
                  InputProps={{
                    readOnly: true,
                  }}
                  variant="outlined"
                />
                <TextField
                  className="col-md-5 ml-2"
                  value={rowData.address}
                  autoFocus
                  margin="dense"
                  id="name"
                  // disabled
                  readOnly
                  label="Address"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
              </div>
              <div className="row">
                <TextField
                  className="col-md-6 me-3"
                  value={rowData.mob1}
                  autoFocus
                  margin="dense"
                  // disabledreadOnly
                  readOnly
                  label="Mobile"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
                <TextField
                  className="col-md-5 ml-2"
                  value={rowData.pan}
                  autoFocus
                  margin="dense"
                  // disabled
                  readOnly
                  label="Pan"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
              </div>
              <div className="row">
                <TextField
                  className="col-md-6 me-3"
                  value={rowData.gst}
                  autoFocus
                  margin="dense"
                  // disabled
                  readOnly
                  label="GST"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
                <TextField
                  className="col-md-5 ml-2"
                  value={`₹${rowData.outstandings}`}
                  autoFocus
                  margin="dense"
                  // disabled
                  readOnly
                  label="Outstanding"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
              </div>
              <div className="row">
                <TextField
                  className="col-md-3 me-3"
                  value={`₹${rowData.request_amount}`}
                  autoFocus
                  margin="dense"
                  id="name"
                  // disabled
                  readOnly
                  label="Amount Requested"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
                <TextField
                  className="col-md-3 me-3"
                  value={`₹${rowData.balance_amount}`}
                  autoFocus
                  margin="dense"
                  id="name"
                  // disabled
                  readOnly
                  label="Balance Amount"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
                <TextField
                  className="col-md-4 me-3"
                  value={`₹${baseAmount}`}
                  autoFocus
                  margin="dense"
                  id="name"
                  // disabled
                  readOnly
                  label="Base Amount"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
                <TextField
                  className="col-md-4 "
                  value={`₹${rowData.gst_amount ? rowData.gst_amount : 0}`}
                  autoFocus
                  margin="dense"
                  id="name"
                  // disabled
                  readOnly
                  label="GST Amount"
                  type="text"
                  variant="outlined"
                  InputProps={{
                    readOnly: true,
                  }}
                />
                <FormControlLabel
                  className="col-md-5"
                  control={
                    <Checkbox
                      onChange={handleGstHold}
                      disabled={rowData.gst_amount == 0}
                    />
                  }
                  label="GST Hold"
                />
                {rowData?.TDSDeduction !== "1" ? (
                  <>
                    <FormControlLabel
                      className="col-md-5"
                      control={<Checkbox onChange={handleTDSDeduction} />}
                      label="TDS Deduction"
                    />
                    {gstHold && (
                      <TextField
                        className="col-md-5 me-3"
                        value={GSTHoldAmount}
                        onChange={handleGSTHoldInputChange}
                        autoFocus
                        margin="dense"
                        id="name"
                        label="GST Hold"
                      />
                    )}
                    {TDSDeduction && (
                      <>
                        <Autocomplete
                          onChange={(e, value) => setTDSPercentage(value)}
                          disablePortal
                          className="col-md-3 mt-2"
                          value={TDSPercentage}
                          id="combo-box-demo"
                          options={[
                            1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                            17, 18, 19, 20,
                          ]}
                          renderInput={(params) => (
                            <TextField
                              {...params}
                              label="TDS %"
                              placeholder="TDS %"
                            />
                          )}
                        />
                        <TextField
                          className="col-md-3 mt-2"
                          value={TDSValue}
                          autoFocus
                          readOnly
                          margin="dense"
                          id="name"
                          label="TDS Amount"
                        />
                      </>
                    )}
                  </>
                ) : (
                  ""
                )}
                <TextField
                  className="col-md-6 me-3"
                  value={rowData.name}
                  autoFocus
                  margin="dense"
                  id="name"
                  readOnly
                  label="Requested By"
                  type="text"
                  variant="outlined"
                />

                <TextField
                  className="col-md-5 ml-2"
                  value={convertDateToDDMMYYYY(rowData.request_date)}
                  autoFocus
                  margin="dense"
                  id="name"
                  // disabled
                  readOnly
                  label="Request Date"
                  type="text"
                  variant="outlined"
                />
              </div>
              <div className="row">
                <TextField
                  className="col-md-11 ml-3"
                  value={rowData.t3}
                  autoFocus
                  margin="dense"
                  id="name"
                  disabled
                  label=" Purchase Remark"
                  type="text"
                  variant="outlined"
                />
              </div>
              <div className="me-3">
                <Autocomplete
                  onChange={(e, value) => setPaymentMode(value)}
                  disablePortal
                  className=" mt-2"
                  id="combo-box-demo"
                  options={
                    paymentModeData.length > 0
                      ? paymentModeData.map((item) => item.payment_mode)
                      : []
                  }
                  fullWidth={true}
                  renderInput={(params) => (
                    <TextField
                      {...params}
                      label="Payment Mode *"
                      placeholder="Payment Mode"
                    />
                  )}
                />

                <Autocomplete
                  onChange={(e, value) => setPaymentStatus(value)}
                  value={paymentStatus}
                  disablePortal
                  disabled
                  className=" mt-2"
                  id="combo-box-demo"
                  options={[
                    "Fully Paid",
                    "Fully Paid(TDS Deducted)",
                    "Fully Paid(GST Hold)",
                    "Fully Paid(TDS Deducted & GST Hold)",
                    "Partially Paid",
                  ]}
                  fullWidth={true}
                  renderInput={(params) => (
                    <TextField
                      {...params}
                      label="Payment Status *"
                      placeholder="Payment Status"
                    />
                  )}
                />
                <TextField
                  InputProps={{
                    readOnly: gstHold,
                  }}
                  onChange={(e) => {
                    rowData.balance_amount;

                    const currentValue = e.target.value;
                    if (/^\d+$/.test(currentValue) || currentValue === "") {
                      // setPaymentAmount(currentValue);
                      if (currentValue <= +rowData.balance_amount) {
                        setPaymentAmount(currentValue);
                        setPaymentStatus;
                      } else {
                        toastError(
                          "Payment Amount should be less than or equal to Requested Amount"
                        );
                      }
                    } else {
                      setPaymentAmount("");
                    }
                  }}
                  className="mt-3"
                  autoFocus
                  type="number"
                  margin="dense"
                  id="name"
                  label=" Paid Amount *"
                  variant="outlined"
                  fullWidth
                  value={paymentAmout}
                />
                <LocalizationProvider dateAdapter={AdapterDayjs}>
                  <DatePicker
                    format="DD/MM/YYYY"
                    className="mt-3"
                    defaultValue={dayjs()}
                    autoFocus
                    label="Payment Date "
                    onChange={(newValue) => {
                      setPaymentDate(
                        newValue
                          .add(5, "hours")
                          .add(30, "minutes")
                          .$d.toGMTString()
                      );
                    }}
                    disableFuture
                    views={["year", "month", "day"]}
                  />
                </LocalizationProvider>
                <TextField
                  onChange={(e) => setAdjustAmount(e.target.value)}
                  multiline
                  className="mt-3"
                  autoFocus
                  margin="dense"
                  id="Adjust Amount"
                  label="Adjust Amount"
                  type="text"
                  variant="outlined"
                  fullWidth
                  value={TDSValue ? adjustAmount : ""}
                />

                <TextField
                  multiline
                  readOnly
                  className="mt-3"
                  autoFocus
                  margin="dense"
                  id="After Adjust Amount"
                  label="After Adjustment Amount"
                  variant="outlined"
                  fullWidth
                  InputProps={{
                    readOnly: true,
                    style: { color: "#6a89ba" },
                  }}
                  value={(
                    parseFloat(rowData?.balance_amount) - TDSValue
                  ).toFixed(2)}
                />
                <TextField
                  onChange={(e) => setPayRemark(e.target.value)}
                  multiline
                  className="mt-3"
                  autoFocus
                  margin="dense"
                  id="name"
                  label="Remark"
                  type="text"
                  variant="outlined"
                  fullWidth
                  value={payRemark}
                />
                <div className="form-group mt-3">
                  <div className="row">
                    <label htmlFor="paymentProof">
                      Payment Proof/ScreenShot
                    </label>

                    <input
                      type="file"
                      className="form-control col-md-6"
                      id="paymentProof"
                      onChange={handleFileChange}
                      // onClick={openImgDialog}
                    />
                    <Button
                      variant="contained"
                      className="col-md-5 ms-3"
                      fullWidth
                      onClick={openImgDialog}
                    >
                      view image
                    </Button>
                    {openDialog && preview && (
                      <div
                        style={{
                          position: "fixed",
                          top: 0,
                          left: 0,
                          right: 0,
                          bottom: 0,
                          background: "rgba(0,0,0,0.5)",
                          display: "flex",
                          justifyContent: "center",
                          alignItems: "center",
                          zIndex: 9999,
                        }}
                        onClick={() => setOpenDialog(false)}
                      >
                        <img
                          src={preview}
                          alt="Selected file"
                          style={{
                            maxWidth: "50%",
                            maxHeight: "80%",
                            cursor: "pointer",
                          }}
                        />
                      </div>
                    )}
                  </div>
                </div>
              </div>